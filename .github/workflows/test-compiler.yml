name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2
          
    - name: Setup Python
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.7
        
    - name: Install System Requirements
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt install libgtk2.0-dev -y
        
    - name: Install Python Packages
      shell: bash
      run: |
        pip install conan tensorflow==2.4.1 matplotlib pillow onnxruntime
        pip install torch==1.4.0+cpu torchvision==0.5.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
        pip install pytest
      
    - name: Create Test Environment
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        pip install pytest
        mkdir test_results
      
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: nncase_linux_x86_64
        path: ${{github.workspace}}/install
    
    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os == 'Linux'
      shell: bash
      env:
        LD_LIBRARY_PATH: ${{github.workspace}}/install/lib
        PYTHONPATH: ${{github.workspace}}/install/lib:${{github.workspace}}/install/python:${{github.workspace}}/tests
      run: |
        pytest tests/importer --doctest-modules --junitxml=test_results/importer.xml
    
    - name: Test
      working-directory: ${{github.workspace}}
      if: runner.os == 'Windows'
      shell: bash
      env:
        PATH: ${{github.workspace}}/install/bin
        PYTHONPATH: ${{github.workspace}}/install/lib;${{github.workspace}}/install/python;${{github.workspace}}/tests
      run: |
        pytest tests/importer --doctest-modules --junitxml=test_results/importer.xml
        
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: test_results/*.xml
